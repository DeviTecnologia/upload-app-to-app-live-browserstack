import { AbstractRunResult } from "../../../runResult/AbstractRunResult";
import { ParsedCommandsInterface } from "../../../runResult/ParsedCommandsInterface";
import { OptionalRunnerDirInterface } from "../../../githubServiceFiles/runnerDir/RunnerDirInterface";
import { SpawnAsyncResult } from "../../../utils/spawnAsync";
import { DockerRunResultInterface } from "./DockerRunResultInterface";
import { WarningsArray } from "../../../runResult/warnings/WarningsArray";
export declare class DockerRunResult extends AbstractRunResult implements DockerRunResultInterface {
    readonly buildSpawnResult: SpawnAsyncResult | undefined;
    readonly spawnResult: SpawnAsyncResult | undefined;
    readonly isSuccessBuild: boolean;
    constructor(commands: ParsedCommandsInterface, error: Error | any | undefined, exitCode: number | undefined, stdout: string | undefined, stderr: string | undefined, durationMs: number, tempDir: OptionalRunnerDirInterface, workspaceDir: OptionalRunnerDirInterface, warnings: WarningsArray, buildSpawnResult: SpawnAsyncResult | undefined, spawnResult: SpawnAsyncResult | undefined, isSuccessBuild: boolean);
}
//# sourceMappingURL=DockerRunResult.d.ts.map